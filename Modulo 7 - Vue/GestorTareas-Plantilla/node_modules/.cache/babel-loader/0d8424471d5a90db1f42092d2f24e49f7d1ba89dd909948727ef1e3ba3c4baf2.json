{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"AddTask\",\n  data() {\n    return {\n      newTask: \"\",\n      tasks: []\n    };\n  },\n  methods: {\n    addTask() {\n      if (this.newTask.trim() === \"\") return;\n      const newTask = {\n        todo: this.newTask,\n        completed: false,\n        id: Date.now()\n      };\n      this.tasks.push(newTask);\n      this.$emit('taskAdded', newTask);\n      this.newTask = \"\";\n    },\n    toggleCompletion(taskId) {\n      const task = this.tasks.find(t => t.id === taskId);\n      if (task) {\n        task.completed = !task.completed;\n      }\n    },\n    deleteTask(taskId) {\n      this.tasks = this.tasks.filter(task => task.id !== taskId);\n    }\n  }\n};","map":{"version":3,"names":["name","data","newTask","tasks","methods","addTask","trim","todo","completed","id","Date","now","push","$emit","toggleCompletion","taskId","task","find","t","deleteTask","filter"],"sources":["src/components/AddTask.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Añadir Tarea</h1>\r\n    <div class=\"add-task-container\">\r\n      <div class=\"input-group mb-3\">\r\n        <input\r\n          v-model=\"newTask\"\r\n          placeholder=\"Añadir nueva tarea\"\r\n          @keyup.enter=\"addTask\"\r\n          class=\"form-control task-input\"\r\n        />\r\n        <button @click=\"addTask\" class=\"add-button\">Añadir Tarea</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"recent-tasks\">\r\n      <h2>Tareas Añadidas:</h2>\r\n      <div v-if=\"tasks.length === 0\" class=\"no-tasks\">\r\n        <p>No hay tareas añadidas</p>\r\n      </div>\r\n      <div v-for=\"task in tasks\" :key=\"task.id\" class=\"recent-task-box\">\r\n        <div class=\"task-content\">\r\n          <p :class=\"{ completed: task.completed }\">{{ task.todo }}</p>\r\n        </div>\r\n        <div class=\"task-status-container\">\r\n          <div :class=\"task.completed ? 'status-completed' : 'status-pending'\" class=\"task-status\">\r\n            {{ task.completed ? 'Completada' : 'Pendiente' }}\r\n          </div>\r\n          <div class=\"task-buttons\">\r\n            <button @click=\"toggleCompletion(task.id)\" class=\"icon-button\">\r\n              <i class=\"fas fa-check\"></i>\r\n            </button>\r\n            <button @click=\"deleteTask(task.id)\" class=\"icon-button delete\">\r\n              <i class=\"fas fa-trash\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"AddTask\",\r\n  data() {\r\n    return {\r\n      newTask: \"\",\r\n      tasks: [],\r\n    };\r\n  },\r\n  methods: {\r\n    addTask() {\r\n      if (this.newTask.trim() === \"\") return;\r\n      const newTask = {\r\n        todo: this.newTask,\r\n        completed: false,\r\n        id: Date.now(),\r\n      };\r\n      this.tasks.push(newTask);\r\n      this.$emit('taskAdded', newTask);\r\n      this.newTask = \"\";\r\n    },\r\n    toggleCompletion(taskId) {\r\n      const task = this.tasks.find(t => t.id === taskId);\r\n      if (task) {\r\n        task.completed = !task.completed;\r\n      }\r\n    },\r\n    deleteTask(taskId) {\r\n      this.tasks = this.tasks.filter(task => task.id !== taskId);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.add-task-container {\r\n  padding: 20px;\r\n  max-width: 2000px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n}\r\n\r\n.task-input {\r\n  flex-grow: 1;\r\n  border-radius: 20px 0 0 20px;\r\n  font-size: 14px;\r\n}\r\n\r\n.add-button {\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 0 4px 4px 0;\r\n  cursor: pointer;\r\n  background-color: #42b983;\r\n  color: white;\r\n  font-size: 14px;\r\n  width: 100px;\r\n}\r\n\r\n.add-button:hover {\r\n  background-color: #169159;\r\n}\r\n\r\n.recent-tasks {\r\n  margin-top: 20px;\r\n}\r\n\r\n.recent-task-box {\r\n  margin-top: 15px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: #f9f9f9;\r\n  max-width: 1000px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.task-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.task-status {\r\n  padding: 5px;\r\n  margin-top: 5px;\r\n  border-radius: 4px;\r\n  display: inline-block;\r\n}\r\n\r\n.status-completed {\r\n  background-color: lightgreen;\r\n  color: black;\r\n}\r\n\r\n.status-pending {\r\n  background-color: gold;\r\n  color: black;\r\n}\r\n\r\n.completed {\r\n  text-decoration: line-through;\r\n  color: #888;\r\n}\r\n\r\n.no-tasks {\r\n  margin-top: 10px;\r\n  color: #777;\r\n}\r\n</style>\r\n"],"mappings":";AA0CA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,SAAAH,OAAA,CAAAI,IAAA;MACA,MAAAJ,OAAA;QACAK,IAAA,OAAAL,OAAA;QACAM,SAAA;QACAC,EAAA,EAAAC,IAAA,CAAAC,GAAA;MACA;MACA,KAAAR,KAAA,CAAAS,IAAA,CAAAV,OAAA;MACA,KAAAW,KAAA,cAAAX,OAAA;MACA,KAAAA,OAAA;IACA;IACAY,iBAAAC,MAAA;MACA,MAAAC,IAAA,QAAAb,KAAA,CAAAc,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAT,EAAA,KAAAM,MAAA;MACA,IAAAC,IAAA;QACAA,IAAA,CAAAR,SAAA,IAAAQ,IAAA,CAAAR,SAAA;MACA;IACA;IACAW,WAAAJ,MAAA;MACA,KAAAZ,KAAA,QAAAA,KAAA,CAAAiB,MAAA,CAAAJ,IAAA,IAAAA,IAAA,CAAAP,EAAA,KAAAM,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}