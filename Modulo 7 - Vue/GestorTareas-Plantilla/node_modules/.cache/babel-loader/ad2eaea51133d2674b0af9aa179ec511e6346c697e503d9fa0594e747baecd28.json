{"ast":null,"code":"import LoadTasksButton from './LoadTasksButton.vue';\nexport default {\n  name: \"TaskList\",\n  components: {\n    LoadTasksButton\n  },\n  data() {\n    return {\n      tasks: [] // Estado local para las tareas\n    };\n  },\n  methods: {\n    updateTasks(tasks) {\n      this.tasks = tasks; // Actualiza las tareas con las cargadas\n    },\n    toggleCompletion(taskId) {\n      const task = this.tasks.find(t => t.id === taskId);\n      if (task) {\n        task.completed = !task.completed; // Cambia el estado de completado\n      }\n    },\n    deleteTask(taskId) {\n      this.tasks = this.tasks.filter(task => task.id !== taskId); // Elimina la tarea\n    }\n  }\n};","map":{"version":3,"names":["LoadTasksButton","name","components","data","tasks","methods","updateTasks","toggleCompletion","taskId","task","find","t","id","completed","deleteTask","filter"],"sources":["src/components/AddTask.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"text-center mb-4\">Lista de Tareas</h1>\r\n    <LoadTasksButton @tasksLoaded=\"updateTasks\" class=\"mb-4\" />\r\n\r\n    <div class=\"tasks-container\">\r\n      <div v-for=\"task in tasks\" :key=\"task.id\" class=\"task-item mb-3 p-3 border rounded bg-light\">\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <p :class=\"{ completed: task.completed }\">{{ task.todo }}</p>\r\n          <div :class=\"task.completed ? 'status-completed' : 'status-pending'\" class=\"task-status\">\r\n            {{ task.completed ? 'Completada' : 'Pendiente' }}\r\n          </div>\r\n        </div>\r\n        <div class=\"task-buttons d-flex justify-content-end\">\r\n          <button @click=\"toggleCompletion(task.id)\" class=\"icon-button btn btn-outline-primary me-2\">\r\n            <i class=\"fas fa-check\"></i>\r\n          </button>\r\n          <button @click=\"deleteTask(task.id)\" class=\"icon-button btn btn-outline-danger\">\r\n            <i class=\"fas fa-trash\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"tasks.length === 0\" class=\"no-tasks text-center\">\r\n      <p>No hay tareas disponibles</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LoadTasksButton from './LoadTasksButton.vue';\r\n\r\nexport default {\r\n  name: \"TaskList\",\r\n  components: {\r\n    LoadTasksButton\r\n  },\r\n  data() {\r\n    return {\r\n      tasks: [] // Estado local para las tareas\r\n    };\r\n  },\r\n  methods: {\r\n    updateTasks(tasks) {\r\n      this.tasks = tasks; // Actualiza las tareas con las cargadas\r\n    },\r\n    toggleCompletion(taskId) {\r\n      const task = this.tasks.find(t => t.id === taskId);\r\n      if (task) {\r\n        task.completed = !task.completed; // Cambia el estado de completado\r\n      }\r\n    },\r\n    deleteTask(taskId) {\r\n      this.tasks = this.tasks.filter(task => task.id !== taskId); // Elimina la tarea\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.completed {\r\n  text-decoration: line-through;\r\n  color: #888;\r\n}\r\n\r\n.task-status {\r\n  padding: 5px;\r\n  margin-top: 5px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.status-completed {\r\n  background-color: lightgreen;\r\n  color: black;\r\n}\r\n\r\n.status-pending {\r\n  background-color: gold;\r\n  color: black;\r\n}\r\n\r\n.no-tasks {\r\n  margin-top: 10px;\r\n  color: #777;\r\n}\r\n</style>\r\n"],"mappings":"AA+BA,OAAAA,eAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAAF,KAAA;MACA,KAAAA,KAAA,GAAAA,KAAA;IACA;IACAG,iBAAAC,MAAA;MACA,MAAAC,IAAA,QAAAL,KAAA,CAAAM,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA,KAAAJ,MAAA;MACA,IAAAC,IAAA;QACAA,IAAA,CAAAI,SAAA,IAAAJ,IAAA,CAAAI,SAAA;MACA;IACA;IACAC,WAAAN,MAAA;MACA,KAAAJ,KAAA,QAAAA,KAAA,CAAAW,MAAA,CAAAN,IAAA,IAAAA,IAAA,CAAAG,EAAA,KAAAJ,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}